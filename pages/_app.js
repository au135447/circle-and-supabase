import "../styles/globals.css";
import "../styles/foundation.css";
import "../styles/custom.css";
import { supabase } from "../lib/initSupabase";
import { useState, createContext, useEffect, useMemo } from "react";
import { useRouter } from "next/router";
import Router from "next/router";
import Link from "next/link";
import Head from "next/head";

export const SupabaseContext = createContext(supabase.auth);

function MyApp({ Component, pageProps }) {
  const router = useRouter();

  function sessionCheck() {
    if (!supabase.auth.currentUser) {
      router.push("/login");
    }
  }
  useEffect(sessionCheck, []);

  async function handleLogout(e) {
    e.preventDefault();
    const { error } = await supabase.auth.signOut();
    router.push("/login");
  }

  return (
    <>
      <Head>
        <title>Circle & Supabase</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      {/*       <div id="loading-screen" className={loadState === "ON" ? "" : "hide"}>
        <div className="lds-ripple">
          <div></div>
          <div></div>
        </div>
      </div> */}
      <header className="grid-container header-container">
        <div className="grid-x">
          <div className="large-12 medium-12 small-12 cell align-center">
            <nav id="main-nav">
              <ul className="align-center">
                <li>
                  <Link href="/">
                    <a>home</a>
                  </Link>
                </li>
                <li>
                  <Link href="/profile">
                    <a>profile</a>
                  </Link>
                </li>
                <li>
                  <Link href="/login">
                    <a>login</a>
                  </Link>
                </li>
                <li>
                  <Link href="#">
                    <a onClick={handleLogout}>logout</a>
                  </Link>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </header>
      <SupabaseContext.Provider value={supabase.auth}>
        <Component {...pageProps} />
      </SupabaseContext.Provider>
    </>
  );
}

export default MyApp;
