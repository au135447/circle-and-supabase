import "../styles/globals.css";
import "../styles/foundation.css";
import "../styles/custom.css";
import { useState, createContext, useEffect, useMemo } from "react";
import { useRouter } from "next/router";
import Link from "next/link";
import Head from "next/head";
import { createClient } from "@supabase/supabase-js";

const SUPABASE_URL = "https://ipvwqlwbmyiusmfrqllp.supabase.co";
const supabase = createClient(
  SUPABASE_URL,
  process.env.NEXT_PUBLIC_SUPABASEANON
);

export const UserContext = createContext(null, null);
export const LoginContext = createContext({
  loginState: "",
  setLoginState: () => {},
});
export const LoadContext = createContext({
  loadState: "",
  setLoadState: () => {},
});

function MyApp({ Component, pageProps }) {
  const [loadState, setLoadState] = useState("OFF");
  const [loginState, setLoginState] = useState(null);
  const router = useRouter();
  let user = supabase.auth.user();
  let session = supabase.auth.session();
  const [userInfo, setUserInfo] = useState(user);
  const [sessionInfo, setSessionInfo] = useState(session);
  const userValue = { userInfo, sessionInfo };
  const loadValue = useMemo(() => ({ loadState, setLoadState }), [loadState]);

  function sessionCheck() {
    user = supabase.auth.user();
    session = supabase.auth.session();
    if (!sessionInfo) {
      router.push("/login");
    } else {
      setUserInfo(user);
      setSessionInfo(session);
    }
  }
  useEffect(sessionCheck, [loginState]);

  async function handleLogout(e) {
    e.preventDefault();
    const { error } = await supabase.auth.signOut();
    setUserInfo(null);
    router.push("/login");
  }

  return (
    <>
      <Head>
        <title>Circle & Supabase</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div id="loading-screen" className={loadState === "ON" ? "" : "hide"}>
        <div className="lds-ripple">
          <div></div>
          <div></div>
        </div>
      </div>
      <header className="grid-container header-container">
        <div className="grid-x">
          <div className="large-12 medium-12 small-12 cell align-center">
            <nav id="main-nav">
              <ul className="align-center">
                <li>
                  <Link href="/">
                    <a>home</a>
                  </Link>
                </li>
                <li>
                  <Link href="/login">
                    <a>login</a>
                  </Link>
                </li>
                <li>
                  <Link href="#">
                    <a onClick={handleLogout}>logout</a>
                  </Link>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </header>
      <UserContext.Provider value={userValue}>
        <LoadContext.Provider value={loadValue}>
          <Component {...pageProps} />
        </LoadContext.Provider>
      </UserContext.Provider>
    </>
  );
}

export default MyApp;
